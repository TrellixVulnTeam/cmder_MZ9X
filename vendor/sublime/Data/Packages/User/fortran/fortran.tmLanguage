<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>f90</string>
		<string>f95</string>
		<string>f03</string>
		<string>f08</string>
		<string>fi</string>
	</array>
	<key>name</key>
	<string>Fortran</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(?i)\!&amp;</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>comment.line.exclamation-mark.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)&amp;\!</string>
			<key>name</key>
			<string>comment.block.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\!.*</string>
			<key>name</key>
			<string>comment.line.exclamation-mark.fortran</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.fortran</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.fortran</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)\b(program|module|function|subroutine)\s+(\w+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.fortran</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.type.fortran</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>comment.fortran</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)^\s*(end)\s*(program|module|function|subroutine)(?:\s+(\w+))?</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)\b(interface|abstract interface)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)^\s*(end)\s*(interface)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.fortran</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fortran</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.interface.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.type.fortran</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.fortran</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)^\s*(module\s+procedure)\s+(\w+)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.fortran</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.fortran</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\b(program|module|function|subroutine)\s+(\w+)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b\d+\.\d*([de][+-]?\d+)?\b</string>
			<key>name</key>
			<string>constant.numeric.float.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b([1-9][0-9]*|0)\b</string>
			<key>name</key>
			<string>constant.numeric.integer.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\.(true|false)\.</string>
			<key>name</key>
			<string>constant.language.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(use|only|contains|call|result|include)\b</string>
			<key>name</key>
			<string>keyword.other.fortran</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fortran</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)\b(len|kind)\s*\=</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(if|then|else|endif|select|case|default|endselect|do|while|enddo|end|where)\b</string>
			<key>name</key>
			<string>keyword.control.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(|exit|cycle|return|stop|go\s+to|end|forall|endforall)\b</string>
			<key>name</key>
			<string>keyword.control.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\.(and|or|not)\.</string>
			<key>name</key>
			<string>keyword.operator.logical.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\.(eq|gt|lt|ge|le|ne)\.</string>
			<key>name</key>
			<string>keyword.operator.comparison.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\=\=|&gt;\=|&lt;\=|&gt;|&lt;|/\=</string>
			<key>name</key>
			<string>keyword.operator.comparison.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\+|\-|\*|\*\*|/</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\=|\=&gt;|(\:)|(\:\:)|//|%</string>
			<key>name</key>
			<string>keyword.operator.other.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\"([^"]*)\"</string>
			<key>name</key>
			<string>string.quoted.double.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\'([^']*)\'</string>
			<key>name</key>
			<string>string.quoted.single.fortran</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fortran</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)(?&lt;=\()(in|out|inout)(?=\))</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(present|allocate|deallocate|write|size|nullify|open|close|inquire|lbound|ubound|sin|cos|asin|acos|tan|atan)(?=\s*\()</string>
			<key>name</key>
			<string>support.function.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(print)\b</string>
			<key>name</key>
			<string>support.function.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(selected_real_kind|allocated|shape)(?=\s*\()</string>
			<key>name</key>
			<string>support.function.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)(\s+)\b(sum|product|count|matmul|ceiling|max|min|maxval|minval|maxloc|minloc)(?=\s*\()</string>
			<key>name</key>
			<string>support.function.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(d?(sqrt|abs|erf|log|exp))(?=\s*\()</string>
			<key>name</key>
			<string>support.function.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(trim|adjustl|dot_product|all|any|reshape|transpose)(?=\s*\()</string>
			<key>name</key>
			<string>support.function.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(implicit|none)\b</string>
			<key>name</key>
			<string>storage.modifier.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(private|public|parameter|optional|allocatable|dimension|pointer|target|intent|procedure)\b</string>
			<key>name</key>
			<string>storage.modifier.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(recursive|pure|elemental)\b</string>
			<key>name</key>
			<string>storage.modifier.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(integer|real|complex|logical|character|type|double precision)\b</string>
			<key>name</key>
			<string>storage.type.fortran</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.fortran</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.type.fortran</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)^\s*(end)\s*(type)</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.fortran</string>
	<key>uuid</key>
	<string>2fe99d9a-cd8b-45a1-9008-56d3490f6a04</string>
</dict>
</plist>
